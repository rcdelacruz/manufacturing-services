swagger: "2.0"
info:
  version: "0.0.1"
  title: Test API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config: {}
x-a127-services: {}
paths:
  /niats:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: Get all data. 
      # used as the method name of the controller
      operationId: getNiats 
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /niats/{division}:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: By division.
      # used as the method name of the controller
      operationId: getNiats
      parameters:
        - name: division
          in: path
          description: division name.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /volumes:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: Get all data. 
      # used as the method name of the controller
      operationId: getVolumes 
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /volumes/{division}:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: By division.
      # used as the method name of the controller
      operationId: getVolumes
      parameters:
        - name: division
          in: path
          description: division name.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /gpiocfs:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: Get all data. 
      # used as the method name of the controller
      operationId: getGpIocfs 
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /gpiocfs/{division}:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: By division.
      # used as the method name of the controller
      operationId: getGpIocfs
      parameters:
        - name: division
          in: path
          description: division name.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /target-safety-stocks:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: Get all data. 
      # used as the method name of the controller
      operationId: getTargetSafetyStocks
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /target-safety-stocks/{division}:
    # binds a127 app logic to a route
    x-swagger-router-controller: wonderware
    x-a127-apply: {}
    get:
      description: By division.
      # used as the method name of the controller
      operationId: getTargetSafetyStocks
      parameters:
        - name: division
          in: path
          description: division name.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    type: string
  ErrorResponse:
    type: string
